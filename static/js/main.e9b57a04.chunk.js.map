{"version":3,"sources":["App.js","components/Transportlayer.js","index.js"],"names":["App","useState","Movies","setMovie","filteredMovies","setFilteredMovies","Loading","setLoading","Keyword","setKeyword","OverSeven","setOverSeven","filterByDone","setfilterByDone","handleDoneChange","filter","useEffect","Promise","resolve","setTimeout","console","log","DATA","then","response","newMovies","map","item","id","name","rate","done","newFilteredMovies","toLowerCase","includes","type","value","onChange","e","target","onClick","checked","movie","data-id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAgGeA,EA7FH,WACV,MAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4CF,mBAAS,IAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA8BN,mBAAS,IAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAAkCR,oBAAS,GAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KACA,EAAwCV,mBAAS,OAAjD,mBAAOW,EAAP,KAAqBC,EAArB,KAqCA,SAASC,EAAiBC,GACxBF,EAAgBE,GAQlB,OA5CAC,qBAAU,WCRH,IAAIC,SAAQ,SAACC,GAClBC,YAAW,WACTC,QAAQC,IAAI,IAAIC,GAChBJ,EAAQI,KACP,QDKYC,MAAK,SAACC,GACnB,IAAMC,EAAYD,EAASE,KAAI,SAACC,GAAD,MAAW,CACxCC,GAAID,EAAKC,GACTC,KAAMF,EAAKE,KACXC,KAAMH,EAAKG,KACXC,MAAM,MAER5B,EAASsB,GACTlB,GAAW,QAEZ,IAEHS,qBAAU,WACR,IAAMgB,EAAoB9B,EAAOa,QAAO,SAACY,GAAD,OACtCA,EAAKE,KAAKI,cAAcC,SAAS1B,EAAQyB,kBAExClB,QAAO,SAACY,GAAD,OAAWjB,GAAYiB,EAAKG,KAAO,KAC1Cf,QAAO,SAACY,GAAD,MACW,QAAjBf,GAAgCe,EAAKI,QAA2B,SAAjBnB,MAEnDP,EAAkB2B,KACjB,CAAC9B,EAAQU,EAAcJ,EAASE,IAsB/BJ,EACK,iBAIP,8BACE,gCACE,0CAEE,uBAAO6B,KAAK,OAAOC,MAAO5B,EAAS6B,SAf3C,SAA6BC,GAC3B7B,EAAW6B,EAAEC,OAAOH,aAgBhB,gCACE,wBAAQI,QAAS,kBAAM1B,EAAiB,QAAxC,iBACA,wBAAQ0B,QAAS,kBAAM1B,EAAiB,SAAxC,kBACA,wBAAQ0B,QAAS,kBAAM1B,EAAiB,WAAxC,uBAEF,gDAEE,uBACEqB,KAAK,WACLM,QAAS/B,EACT2B,SAxBV,SAA+BC,GAC7B3B,EAAa2B,EAAEC,OAAOE,eA0BlB,8BACE,6BACGrC,EAAesB,KAAI,SAACgB,GAAD,OAClB,qBAAIC,UAASD,EAAMd,GAAnB,oBACMc,EAAMb,KADZ,YACoBa,EAAMZ,MACxB,wBAAQU,QAAS,kBAjDRZ,EAiD4Bc,EAAMd,QAhDvDzB,GAAS,kBACPD,EAAOwB,KAAI,SAACgB,GACV,OAAIA,EAAMd,KAAOA,EACR,2BAAKc,GAAZ,IAAmBX,MAAOW,EAAMX,OAE3BW,QANb,IAAuBd,GAiDT,SACGc,EAAMX,KAAO,OAAS,4BE/EzCa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.e9b57a04.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getAllMovies } from \"./components/Transportlayer\";\n\nconst App = () => {\n  const [Movies, setMovie] = useState([]);\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const [Loading, setLoading] = useState(true);\n  const [Keyword, setKeyword] = useState(\"\");\n  const [OverSeven, setOverSeven] = useState(false);\n  const [filterByDone, setfilterByDone] = useState(\"ALL\");\n\n  useEffect(() => {\n    getAllMovies().then((response) => {\n      const newMovies = response.map((item) => ({\n        id: item.id,\n        name: item.name,\n        rate: item.rate,\n        done: false,\n      }));\n      setMovie(newMovies);\n      setLoading(false);\n    });\n  }, []);\n\n  useEffect(() => {\n    const newFilteredMovies = Movies.filter((item) =>\n      item.name.toLowerCase().includes(Keyword.toLowerCase())\n    )\n      .filter((item) => (OverSeven ? item.rate > 7 : true))\n      .filter((item) =>\n        filterByDone === \"ALL\" ? true : item.done === (filterByDone === \"DONE\")\n      );\n    setFilteredMovies(newFilteredMovies);\n  }, [Movies, filterByDone, Keyword, OverSeven]);\n\n  function handleDoneBtn(id) {\n    setMovie(() =>\n      Movies.map((movie) => {\n        if (movie.id === id) {\n          return { ...movie, done: !movie.done };\n        }\n        return movie;\n      })\n    );\n  }\n\n  function handleDoneChange(filter) {\n    setfilterByDone(filter);\n  }\n  function handleKeywordChange(e) {\n    setKeyword(e.target.value);\n  }\n  function handleOverSevenChange(e) {\n    setOverSeven(e.target.checked);\n  }\n  if (Loading) {\n    return \"Please wait...\";\n  }\n\n  return (\n    <div>\n      <div>\n        <div>\n          Keyword\n          <input type=\"text\" value={Keyword} onChange={handleKeywordChange} />\n        </div>\n        <div>\n          <button onClick={() => handleDoneChange(\"ALL\")}>all</button>\n          <button onClick={() => handleDoneChange(\"DONE\")}>done</button>\n          <button onClick={() => handleDoneChange(\"UNDONE\")}>undone</button>\n        </div>\n        <div>\n          Only over 7.0\n          <input\n            type=\"checkbox\"\n            checked={OverSeven}\n            onChange={handleOverSevenChange}\n          />\n        </div>\n        <div>\n          <ul>\n            {filteredMovies.map((movie) => (\n              <li data-id={movie.id}>\n                {`${movie.name} ${movie.rate}`}\n                <button onClick={() => handleDoneBtn(movie.id)}>\n                  {movie.done ? \"done\" : \" undone\"}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import DATA from \"../data.json\";\r\n\r\nexport function getAllMovies() {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      console.log(\"d\",DATA)\r\n      resolve(DATA);\r\n    }, 1000);\r\n  });\r\n};\r\nexport function getServerData(id) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(\"Film #\" + id);\r\n    },3000);\r\n  });\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}